wait(4)
local args = {
    [1] = "Torment"
}

game:GetService("ReplicatedStorage"):WaitForChild("VoteRemote"):InvokeServer(unpack(args))
local player = game.Players.LocalPlayer
local teleportPosition = Vector3.new(1550, 255, 3000)

local function AdjustGravity()
    game.Workspace.Gravity = 0
end

local function TeleportLocalPlayer()
    if player and teleportPosition then
        AdjustGravity()
        if player.Character then
            player.Character:MoveTo(teleportPosition)
        end
    end
end

local function shootAtPosition(position)
    local args = {
        [1] = "shoot",
        [2] = {
            [1] = CFrame.new(position),
            [2] = 100
        }
    }

    game:GetService("Players").LocalPlayer.Character.Torrent.RemoteFunction:InvokeServer(unpack(args))
        local args = {
        [1] = "shoot",
        [2] = {
            [1] = CFrame.new(position),
            [2] = 100
        }
    }

    game:GetService("Players").LocalPlayer.Character.Torrent.RemoteFunction:InvokeServer(unpack(args))
        local args = {
        [1] = "shoot",
        [2] = {
            [1] = CFrame.new(position),
            [2] = 100
        }
    }

    game:GetService("Players").LocalPlayer.Character.Torrent.RemoteFunction:InvokeServer(unpack(args))
    
    
end

local function ShootingCoroutine()
    while true do
        local plr = game.Players.LocalPlayer
        for _, descendant in pairs(game.Workspace:GetDescendants()) do
            if descendant:IsA("Model") and descendant:FindFirstChild("HumanoidRootPart") and descendant:FindFirstChild("Humanoid") then
                local humanoidRootPart = descendant:FindFirstChild("HumanoidRootPart")
                local humanoid = descendant:FindFirstChild("Humanoid")
                
                if humanoid.Health >= 1 and descendant ~= plr.Character and descendant.Name ~= plr.Name then
                    shootAtPosition(humanoidRootPart.Position)
                end
            end
        end
        wait(0.1)  -- Adjust this wait time as needed for shooting frequency
    end
end

local function equipTorrent()
    while true do
        local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer
		local Backpack = LocalPlayer.Backpack
		local ToolName = "Torrent" -- Tool name in your backpack.
		
		local Tool = Backpack and Backpack:FindFirstChild(ToolName)
		if Tool then
		    LocalPlayer.Character.Humanoid:EquipTool(Tool)
		    wait(0.5)
		else
		    warn(ToolName .. " not found in the backpack.")
		end

        wait(1)  -- Adjust this wait time as needed for equipping frequency
    end
end



local thirdCoroutineThread = coroutine.create(equipTorrent)
coroutine.resume(thirdCoroutineThread)

local shootingThread = coroutine.create(ShootingCoroutine)
coroutine.resume(shootingThread)

while true do
    TeleportLocalPlayer()
    wait(1.5)
end
